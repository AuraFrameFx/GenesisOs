# A revised and optimized GitHub Actions workflow for a full Android build.
# This workflow includes steps for setting up the correct JDK, Android NDK,
# CMake, and Gradle, with caching enabled for faster execution times.

name: Full Auto Build (CMake, NDK, Gradle, JDK)

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

# Define permissions for the GITHUB_TOKEN. This is a security best practice
# to ensure the workflow only has the permissions it needs.
permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository's code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the Java Development Kit (JDK).
      # Using an LTS version like JDK 17 is generally recommended for Android
      # development for better stability and compatibility.
      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: "temurin" # A popular, open-source distribution
          java-version: "24"

      # Step 3: Install the required Android NDK and CMake versions.
      # Pinning versions ensures consistent builds across different runs.
      - name: Install Android NDK and CMake
        uses: android-actions/setup-android@v3
        with:
          components: "ndk;26.1.10909125 cmake;3.22.1"

      # Step 4: Set up Gradle with caching.
      # This action automatically caches Gradle dependencies, wrappers, and build outputs,
      # which significantly speeds up subsequent builds.
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        # No need to manually clear caches; this action handles it optimally.

      # Step 5: Ensure the Gradle wrapper is executable.
      # While actions/checkout usually preserves permissions, this is a good safeguard.
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Step 6: Run the build.
      # The --stacktrace flag provides detailed error output for easier debugging.
      - name: Build project
        run: ./gradlew build --stacktrace
